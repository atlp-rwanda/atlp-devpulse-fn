{"version":3,"file":"static/js/966.6a05ed68.chunk.js","mappings":"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","sources":["components/CkeckBox.tsx","pages/Trash/Trash.tsx","redux/actions/softDeletedTraineesActions.ts"],"sourcesContent":["import React, { forwardRef, useEffect, useRef } from \"react\";\n\nconst CkeckBox = forwardRef(({ indeterminate, ...rest }: any, ref: any) => {\n  const defaultRef = useRef();\n  const resolvedRef = ref || defaultRef;\n  useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        ref={resolvedRef}\n        {...rest}\n        className=\"w-[20px] h-[20px]\"\n      />\n    </div>\n  );\n});\n\nexport default CkeckBox;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { getAllSoftDeletedTrainees } from \"../../redux/actions/softDeletedTraineesActions\";\nimport { connect } from \"react-redux\";\nimport { useTable, usePagination, useRowSelect } from \"react-table\";\nimport Sidebar from \"../../components/sidebar/sidebar\";\nimport * as BsIcons from \"react-icons/bs\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport CheckBox from \"../../components/CkeckBox\";\n\nconst Trash = (props: any) => {\n  const { allTrainees } = props;\n  const [pageIdx] = useState(1);\n  const [itemsPerPage] = useState(100);\n\n  useEffect(() => {\n    const data = {\n      page: pageIdx,\n      itemsPerPage,\n    };\n\n    props.getAllSoftDeletedTrainees(data);\n  }, []);\n\n  const trainees = allTrainees.data;\n\n  const COLS = [\n    {\n      Header: \"First name\",\n      accessor: \"firstName\",\n    },\n    {\n      Header: \"Last name\",\n      accessor: \"lastName\",\n    },\n    {\n      Header: \"Email\",\n      accessor: \"email\",\n    },\n    {\n      Header: \"Actions\",\n      accessor: \"\",\n      Cell: ({ row }: any) => {\n        return (\n          <div>\n            <BsIcons.BsThreeDotsVertical\n              style={{\n                color: \"#000\",\n                fontSize: \"20px\",\n              }}\n            />\n          </div>\n        );\n      },\n    },\n  ];\n\n  const columns = useMemo(() => COLS, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n  }: any = useTable(\n    {\n      columns,\n      data: trainees,\n    },\n    usePagination,\n    useRowSelect,\n    (hooks: any) => {\n      hooks.visibleColumns.push((columns: any) => {\n        return [\n          {\n            id: \"selection\",\n            Header: ({ getToggleAllRowsSelectedProps }: any) => (\n              <CheckBox {...getToggleAllRowsSelectedProps()} />\n            ),\n            Cell: ({ row }: any) => (\n              <CheckBox {...row.getToggleRowSelectedProps()} />\n            ),\n          },\n          ...columns,\n        ];\n      });\n    }\n  );\n  const { pageIndex, pageSize } = state;\n\n  // const firstPageRows = rows.slice(0, 10);\n\n  // const selected = {\n  //   selectedFlatRows: selectedFlatRows.map((row: any) => row.original),\n  // };\n\n  return (\n    <>\n      <div className=\"flex bg-[#F9F9FB]\">\n        <div className=\"md:hidden\">\n          <Sidebar />\n        </div>\n        <div className=\"min-h-[50vh] w-[84rem] block mt-10 md:w-[100rem] md:mt-0\">\n          <div className=\" table table-fixed w-[100%] top-[20%] md:top-[10%] pb-10 md:relative px-[10%] md:px-[10px]\">\n            <div className=\"flex justify-between align-center mb-5 relative md:block\">\n              <div className=\"absolute bottom-0 right-0 md:relative md:mb-3\">\n                <button className=\"px-3 rounded-[5px] bg-[#173b3f] text-white flex items-center\">\n                  Empty trash\n                </button>\n              </div>\n              <div>\n                <div className=\"relative mb-2 w-[fit-content]\">\n                  <IoIcons.IoMdArrowDropdown className=\"h-[1.5rem] w-[1.5rem] absolute box-border top-[50%] right-[2px] translate-y-[-50%]\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Sort by\"\n                    className=\"px-2 py-1 border border-[#999999] rounded-[5px]\"\n                  />\n                </div>\n\n                <div className=\"relative\" style={{ width: \"fit-content\" }}>\n                  <AiIcons.AiOutlineSearch className=\"h-[1.5rem] w-[1.5rem] absolute box-border top-[50%] right-[2px] translate-y-[-50%]\" />\n                  <input\n                    type=\"search\"\n                    placeholder=\"Search\"\n                    className=\"px-2 pl-7 py-1 border border-[#999999] rounded-[5px]\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div>\n              <div className=\" w-[100%] max-h-[70vh] m-auto  bg-[#fff] shadow-md rounded-[10px] relative pb-[20px]  overflow-x-auto  overflow-y-scroll \tmd:w-[100%]\">\n                <table\n                  {...getTableProps()}\n                  className=\"border-collapse w-[100%] m-auto rounded-[15px] whitespace-nowrap \"\n                >\n                  <thead className=\" w-full px-32 sticky top-0\">\n                    {headerGroups.map((headerGroup: any, index: number) => (\n                      <tr\n                        key={index}\n                        {...headerGroup.getHeaderGroupProps()}\n                        className=\"border-solid border-[1px] border-white even:bg-[#eef1f1] first:w-[20px]\"\n                      >\n                        {headerGroup.headers.map(\n                          (column: any, index: number) => (\n                            <th\n                              key={index}\n                              {...column.getHeaderProps}\n                              className=\"border-solid pl-[30px] h-[50px] text-left bg-[#eef1f1]  first:rounded-tl-[10px] last:rounded-tr-[10px] border-b-[2px] border-[#c5c5c5] py-6   last:pl-[0px] w-[150px] last:w-[20px]  first:w-[20px]  \"\n                            >\n                              {column.render(\"Header\")}\n                            </th>\n                          )\n                        )}\n                      </tr>\n                    ))}\n                  </thead>\n                  <tbody {...getTableBodyProps()}>\n                    {page.map((row: any) => {\n                      prepareRow(row);\n                      return (\n                        <tr\n                          {...row.getRowProps()}\n                          key={row.original.id}\n                          className=\"even:bg-[#eef1f1] border-b border-gray-200 \"\n                        >\n                          {row.cells.map((cell: any) => {\n                            return (\n                              <td\n                                {...cell.getCellProps()}\n                                className=\"pl-[30px] text-left max-w-[150px] overflow-x-auto p-4 last:w-[2px] last:pl-[0px]\"\n                              >\n                                {cell.render(\"Cell\")}\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>{\" \"}\n            </div>\n\n            <div className=\"block mx-auto my-0 w-[100%]  bottom-0 overflow-x-auto\">\n              <div className=\"w-[100%] flex items-center justify-center my-[30px]  mx-auto md:block md:mx-auto\">\n                <span className=\"flex items-center md:justify-center md:mt-[10px]\">\n                  {\" \"}\n                  <button\n                    className=\"my-0 mx-[5px] px-[5px] py-0 text-[#333] h-[38px] border-solid border-[1px]  border-[#a8a8a8]  disabled:bg-[#E7E7E7] disabled:text-[#a8a8a8]\"\n                    onClick={() => gotoPage(0)}\n                    disabled={!canPreviousPage}\n                  >\n                    <AiIcons.AiOutlineDoubleLeft />\n                  </button>\n                  <button\n                    className=\" border-solid border-[1px]  border-[#a8a8a8] py-0 px-[10px] text-[#333] rounded-l-[5px] h-[38px] disabled:bg-[#E7E7E7] disabled:text-[#a8a8a8] \"\n                    onClick={() => previousPage()}\n                    disabled={!canPreviousPage}\n                  >\n                    <AiIcons.AiOutlineLeft />\n                  </button>\n                  <span className=\"flex flex-wrap md:hidden \" id=\"pages\">\n                    {pageOptions?.map((pageOption: any, i: number) => {\n                      return (\n                        <div>\n                          <button\n                            className={`border-solid border-[1px] mx-[2px]  border-[#a8a8a8] bg-[#fff] w-[35px] h-[38px]  active:bg-[#333] active:text-[#fff]-500 ${\n                              pageIndex === i && \"bg-[#eef1f1]\"\n                            }`}\n                            onClick={(e: any) => {\n                              const pageNumber = e.target.innerText;\n                              gotoPage(pageNumber - 1);\n                            }}\n                          >\n                            {pageOption + 1}\n                          </button>\n                        </div>\n                      );\n                    })}\n                  </span>\n                  <button\n                    className=\" border-solid border-[1px]  border-[#a8a8a8] py-0 px-[10px] text-[#333] rounded-r-[5px] h-[38px]  disabled:bg-[#E7E7E7] disabled:text-[#a8a8a8]\"\n                    onClick={() => nextPage()}\n                    disabled={!canNextPage}\n                  >\n                    <AiIcons.AiOutlineRight />\n                  </button>\n                  <button\n                    className=\"my-0 mx-[5px] px-[5px] py-0 text-[#333] h-[38px] border-solid border-[1px]  border-[#a8a8a8]  disabled:bg-[#E7E7E7] disabled:text-[#a8a8a8]\"\n                    onClick={() => gotoPage(pageCount - 1)}\n                    disabled={!canNextPage}\n                  >\n                    <AiIcons.AiOutlineDoubleRight />\n                  </button>\n                </span>{\" \"}\n                <span className=\"flex ml-3 md:justify-center  text-center md:mt-3 md:ml-0\">\n                  Page <strong>{pageIndex + 1} </strong>of{\" \"}\n                  <strong>{pageOptions.length}</strong>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapState = ({ softDeletedTrainees }: any) => ({\n  allTrainees: softDeletedTrainees,\n});\n\nexport default connect(mapState, { getAllSoftDeletedTrainees })(Trash);\n","import creator from \"./creator\";\nimport { GET_SOFT_DELETED_TRAINEES, GET_SOFT_DELETED_TRAINEES_ERROR } from \"..\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nexport const getAllSoftDeletedTrainees =\n  ({ page, itemsPerPage }: any) =>\n  async (dispatch: any) => {\n    try {\n      await axios({\n        url: process.env.BACKEND_URL,\n        method: \"post\",\n        data: {\n          query: `\n        query Query($input: pagination) {\n            allSoftDeletedTrainees(input: $input) {\n                lastName\n                firstName\n                _id\n                email\n            }\n        }\n      `,\n          variables: {\n            input: {\n              page,\n              itemsPerPage,\n            },\n          },\n        },\n      })\n        .then((response) => {\n          if (response.data.data !== null) {\n            toast.success(\"Fetched all deleted trainees successfuly.\");\n\n            dispatch(\n              creator(\n                GET_SOFT_DELETED_TRAINEES,\n                response.data.data.allSoftDeletedTrainees\n              )\n            );\n          } else {\n            const err = response.data.errors[0].message;\n\n            toast.error(err);\n            dispatch(creator(GET_SOFT_DELETED_TRAINEES_ERROR, err));\n          }\n        })\n        .catch((error) => {\n          dispatch(creator(GET_SOFT_DELETED_TRAINEES_ERROR, error));\n        });\n\n      // const softDeletedTrainees = await datas.data.data.allSoftDeletedTrainees;\n      // dispatch(creator(GET_SOFT_DELETED_TRAINEES_ERROR, softDeletedTrainees));\n    } catch (error) {\n      if (error) {\n        return console.log(error);\n      }\n    }\n  };\n"],"names":["forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","type","className","connect","allTrainees","softDeletedTrainees","getAllSoftDeletedTrainees","page","itemsPerPage","dispatch","axios","url","process","BACKEND_URL","method","data","query","variables","input","then","response","toast","creator","GET_SOFT_DELETED_TRAINEES","allSoftDeletedTrainees","err","errors","message","GET_SOFT_DELETED_TRAINEES_ERROR","catch","error","console","log","props","useState","pageIdx","trainees","COLS","Header","accessor","Cell","row","style","color","fontSize","columns","useMemo","useTable","usePagination","useRowSelect","hooks","visibleColumns","push","id","getToggleAllRowsSelectedProps","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","state","setPageSize","prepareRow","pageIndex","rows","selectedFlatRows","pageSize","placeholder","width","map","headerGroup","index","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","key","original","cells","cell","getCellProps","onClick","disabled","pageOption","i","e","pageNumber","target","innerText","length"],"sourceRoot":""}