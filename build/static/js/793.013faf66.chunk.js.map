{"version":3,"file":"static/js/793.013faf66.chunk.js","mappings":"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","sources":["pages/Trash/Trash.tsx","redux/actions/softDeletedTraineesActions.ts","redux/actions/restoreDelTrainee.tsx","redux/actions/clearTrash.ts"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { getAllSoftDeletedTrainees } from \"../../redux/actions/softDeletedTraineesActions\";\nimport { restoretraine } from \"../../redux/actions/restoreDelTrainee\";\nimport { connect } from \"react-redux\";\nimport { useTable, usePagination, useRowSelect } from \"react-table\";\nimport * as BsIcons from \"react-icons/bs\";\nimport * as AiIcons from \"react-icons/ai\";\nimport CheckBox from \"../../components/CkeckBox\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport NavBar from \"../../components/sidebar/navHeader\";\nimport { clearTrash } from \"../../redux/actions/clearTrash\";\nimport Select from \"react-select\";\nimport { customTheme } from \"../FilterTeainee/FilterTrainee\";\n\n\n\nconst Trash = (props: any) => {\n  console.log(props);\n  const { allTrainees, restore, clearTrashMessage } = props;\n  const [pageIdx] = useState(1);\n  const [itemsPerPage] = useState(100);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [traineid, settraineid] = useState(\"\");\n  const [filterAttributes, setFilterAttributes] = useState(\"\");\n  const [wordsEntered, setWordsEntered] = useState(\"\");\n\n\n\n  const open = Boolean(anchorEl);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [activeCycle, setActiveCycle] = useState<number | undefined>(undefined);\n\n  useEffect(() => {\n    const data = {\n      page: pageIdx,\n      itemsPerPage,\n    };\n\n    props.getAllSoftDeletedTrainees(data);\n  }, [restore, clearTrashMessage]);\n  const [moredrop, setmoredrop] = useState(\"\");\n  const trainees = allTrainees.data;\n  const onSubmitHandler = (e: any) => {\n    const traine = trainees[activeCycle!];\n    settraineid(traine._id);\n    props.restoretraine(traine._id);\n    setAnchorEl(null);\n  };\n  const onSubmitHandle = async (userId: any) => {\n    setmoredrop(\"\");\n  };\n  console.log(moredrop);\n\n  const COLS = [\n    {\n      Header: \"First name\",\n      accessor: \"firstName\",\n    },\n    {\n      Header: \"Last name\",\n      accessor: \"lastName\",\n    },\n    {\n      Header: \"Email\",\n      accessor: \"email\",\n    },\n    {\n      Header: \"Actions\",\n      accessor: \"\",\n      Cell: ({ row }: any) => {\n        return (\n          <div>\n            <BsIcons.BsThreeDotsVertical\n              onClick={(event) => {\n                setActiveCycle(row.id);\n                setAnchorEl(event.currentTarget as unknown as HTMLElement);\n              }}\n              style={{\n                color: \"#000\",\n                fontSize: \"20px\",\n              }}\n            />\n          </div>\n        );\n      },\n    },\n  ];\n\n  const columns = useMemo(() => COLS, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n  }: any = useTable(\n    {\n      columns,\n      data: trainees,\n    },\n    usePagination,\n    useRowSelect,\n    (hooks: any) => {\n      hooks.visibleColumns.push((columns: any) => {\n        return [\n          {\n            id: \"selection\",\n            Header: ({ getToggleAllRowsSelectedProps }: any) => (\n              <CheckBox {...getToggleAllRowsSelectedProps()} />\n            ),\n            Cell: ({ row }: any) => (\n              <CheckBox {...row.getToggleRowSelectedProps()} />\n            ),\n          },\n          ...columns,\n        ];\n      });\n    }\n  );\n  const { pageIndex, pageSize } = state;\n\n  const emptyRecycleBin = async () => {\n    await props.clearTrash();\n  }\n\n  const clearInput = () => {\n    setWordsEntered(\"\")\n  }\n\n  return (\n    <>\n      <NavBar />\n      <div className=\"flex bg-[#F9F9FB] min-h-[100vh]\" >\n        <div className=\"min-h-[50vh] w-[100%] block  md:w-[100%] md:mt-0  pl-[16rem] pt-[80px] md:pl-0\">\n          <div className=\" w-[100%] top-[20%] md:top-[10%] md:relative px-[10%] md:px-[10px]\">\n            <div className=\"flex justify-between align-center mb-5 relative md:block\">\n              <div className=\"absolute bottom-0 right-0 md:relative md:mb-3\">\n                <button onClick={emptyRecycleBin} className=\"px-3 rounded-[5px] bg-[#173b3f] text-white flex items-center\">\n                  Empty trash\n                </button>\n              </div>\n              <div>\n                <div className=\"\">\n                  <Select\n                    className=\"test sm:text-sm border bg-cgray border-solid border-bdr w-40 rounded-bt-rd\"\n                    options={[\n                      { value: \"_id\", label: \"Trainee ID\" },\n                      { value: \"firstName\", label: \"First Name\" },\n                      { value: \"lastName\", label: \"Last Name\" },\n                      { value: \"email\", label: \"Email\" },\n                      { value: \"\", label: \"Select by\" },\n                    ]}\n                    defaultValue={{ value: '', label: 'Select by' }}\n                    onChange={(e) => setFilterAttributes(`${e?.value}`)}\n                    theme={customTheme}\n                  />\n                </div>\n                <div className=\"flex items-center mb-6 semi-sm:flex-wrap\">\n                  <div className=\" searchInputs relative block\">\n                    <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n                      <svg className=\"h-5 w-5 fill-slate-300 text-cg cursor-pointer\" onClick={clearInput} viewBox=\"-6 -6 20 20\">\n                        {wordsEntered === \"\" ? (\n                          <AiIcons.AiOutlineSearch />\n                        ) : (\n                          <AiIcons.AiOutlineClose />\n                        )}\n\n                      </svg>\n                    </span>\n                    <input onChange={(e) => setWordsEntered(e.target.value)} className=\"block bg-row-gray w-50 border border-bdr rounded-bt-rd mt-2 py-2 pl-9 pr-4 focus:outline-none sm:text-sm\" value={wordsEntered} placeholder=\"Search\" type=\"text\" name=\"search\" />\n                  </div>\n                </div>\n              </div>\n\n            </div>\n            <div>\n              <div className=\" w-[100%] max-h-[70vh] m-auto  bg-[#fff] shadow-md rounded-[10px] relative pb-[20px]  overflow-x-auto  overflow-y-scroll \tmd:w-[100%]\">\n                <table\n                  {...getTableProps()}\n                  className=\"border-collapse w-[100%] m-auto rounded-[15px] whitespace-nowrap \"\n                >\n                  <thead className=\" w-full px-32 sticky top-0\">\n                    {headerGroups.map((headerGroup: any, index: number) => (\n                      <tr\n                        key={index}\n                        {...headerGroup.getHeaderGroupProps()}\n                        className=\"border-solid border-[1px] border-white even:bg-[#eef1f1] first:w-[20px]\"\n                      >\n                        {headerGroup.headers.map(\n                          (column: any, index: number) => (\n                            <th\n                              key={index}\n                              {...column.getHeaderProps}\n                              className=\"border-solid pl-[30px] h-[50px] text-left bg-[#eef1f1]  first:rounded-tl-[10px] last:rounded-tr-[10px] border-b-[2px] border-[#c5c5c5] py-6   last:pl-[0px] w-[150px] last:w-[20px]  first:w-[20px]  \"\n                            >\n                              {column.render(\"Header\")}\n                            </th>\n                          )\n                        )}\n                      </tr>\n                    ))}\n                  </thead>\n                  <tbody {...getTableBodyProps()}>\n                    {page.map((row: any) => {\n                      prepareRow(row);\n                      return (\n                        <tr\n                          {...row.getRowProps()}\n                          key={row.original.id}\n                          className=\"even:bg-[#eef1f1] border-b border-gray-200 \"\n                        >\n                          {row.cells.map((cell: any) => {\n                            return (\n                              <td\n                                {...cell.getCellProps()}\n                                className=\"pl-[30px] text-left max-w-[150px] overflow-x-auto p-4 last:w-[2px] last:pl-[0px]\"\n                              >\n                                {cell.render(\"Cell\")}\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>{\" \"}\n            </div>\n            <Menu\n              id=\"basic-menu\"\n              anchorEl={anchorEl}\n              open={open}\n              onClose={handleClose}\n              MenuListProps={{\n                \"aria-labelledby\": \"basic-button\",\n              }}\n            >\n              <MenuItem\n                onClick={(e) => {\n                  onSubmitHandler(e);\n                }}\n              >\n                <BsIcons.BsArrowCounterclockwise className=\"mr-[5px]\" />\n                Restore\n              </MenuItem>\n            </Menu>\n\n            <div className=\"block mx-auto my-0 w-[100%]  bottom-0 overflow-x-auto\">\n              <div className=\"w-[100%] flex items-center justify-center my-[30px]  mx-auto md:block md:mx-auto\">\n                <span className=\"flex items-center md:justify-center md:mt-[10px]\">\n                  {\" \"}\n                  <button\n                    className=\"my-0 mx-[5px] px-[5px] py-0 text-[#333] h-[38px] border-solid border-[1px]  border-[#a8a8a8]  disabled:bg-[#E7E7E7] disabled:text-[#a8a8a8]\"\n                    onClick={() => gotoPage(0)}\n                    disabled={!canPreviousPage}\n                  >\n                    <AiIcons.AiOutlineDoubleLeft />\n                  </button>\n                  <button\n                    className=\" border-solid border-[1px]  border-[#a8a8a8] py-0 px-[10px] text-[#333] rounded-l-[5px] h-[38px] disabled:bg-[#E7E7E7] disabled:text-[#a8a8a8] \"\n                    onClick={() => previousPage()}\n                    disabled={!canPreviousPage}\n                  >\n                    <AiIcons.AiOutlineLeft />\n                  </button>\n                  <span className=\"flex flex-wrap md:hidden \" id=\"pages\">\n                    {pageOptions?.map((pageOption: any, i: number) => {\n                      return (\n                        <div>\n                          <button\n                            className={`border-solid border-[1px] mx-[2px]  border-[#a8a8a8] bg-[#fff] w-[35px] h-[38px]  active:bg-[#333] active:text-[#fff]-500 ${pageIndex === i && \"bg-[#eef1f1]\"\n                              }`}\n                            onClick={(e: any) => {\n                              const pageNumber = e.target.innerText;\n                              gotoPage(pageNumber - 1);\n                            }}\n                          >\n                            {pageOption + 1}\n                          </button>\n                        </div>\n                      );\n                    })}\n                  </span>\n                  <button\n                    className=\" border-solid border-[1px]  border-[#a8a8a8] py-0 px-[10px] text-[#333] rounded-r-[5px] h-[38px]  disabled:bg-[#E7E7E7] disabled:text-[#a8a8a8]\"\n                    onClick={() => nextPage()}\n                    disabled={!canNextPage}\n                  >\n                    <AiIcons.AiOutlineRight />\n                  </button>\n                  <button\n                    className=\"my-0 mx-[5px] px-[5px] py-0 text-[#333] h-[38px] border-solid border-[1px]  border-[#a8a8a8]  disabled:bg-[#E7E7E7] disabled:text-[#a8a8a8]\"\n                    onClick={() => gotoPage(pageCount - 1)}\n                    disabled={!canNextPage}\n                  >\n                    <AiIcons.AiOutlineDoubleRight />\n                  </button>\n                </span>{\" \"}\n                <span className=\"flex ml-3 md:justify-center  text-center md:mt-3 md:ml-0\">\n                  Page <strong>{pageIndex + 1} </strong>of{\" \"}\n                  <strong>{pageOptions.length}</strong>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapState = (state: any) => ({\n  allTrainees: state.softDeletedTrainees,\n  restore: state.restore,\n  clearTrashMessage: state.clearTrash,\n\n});\n\nexport default connect(mapState, { getAllSoftDeletedTrainees, restoretraine, clearTrash })(\n  Trash\n);\n","import creator from \"./creator\";\nimport { GET_SOFT_DELETED_TRAINEES, GET_SOFT_DELETED_TRAINEES_ERROR } from \"..\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nexport const getAllSoftDeletedTrainees =\n  ({ page, itemsPerPage }: any) =>\n  async (dispatch: any) => {\n    try {\n      await axios({\n        url: 'http://localhost:4000/',\n        method: \"post\",\n        data: {\n          query: `\n        query Query($input: pagination) {\n            allSoftDeletedTrainees(input: $input) {\n                lastName\n                firstName\n                _id\n                email\n            }\n        }\n      `,\n          variables: {\n            input: {\n              page,\n              itemsPerPage,\n            },\n          },\n        },\n      })\n        .then((response) => {\n          if (response.data.data !== null) {\n            toast.success(\"Fetched all deleted trainees successfuly.\");\n          console.log(response.data.data.allSoftDeletedTrainees)\n            dispatch(\n              creator(\n                GET_SOFT_DELETED_TRAINEES,\n                response.data.data.allSoftDeletedTrainees\n                \n              )\n            );\n          } else {\n            const err = response.data.errors[0].message;\n\n            toast.error(err);\n            dispatch(creator(GET_SOFT_DELETED_TRAINEES_ERROR, err));\n          }\n        })\n        .catch((error) => {\n          dispatch(creator(GET_SOFT_DELETED_TRAINEES_ERROR, error));\n        });\n    } catch (error) {\n      if (error) {\n        return console.log(error);\n      }\n    }\n  };\n","import axios from './axiosconfig';\nimport { Dispatch } from 'redux';\nimport { RestoreActionType, Action  } from '../actiontypes/restoreTrainee';\nimport { toast } from \"react-toastify\";\n\nexport const restoretraine = (traineId: string) => {\n    console.log(traineId)\n    return async (dispatch:Dispatch<Action>) => {\n        dispatch({\n            type: RestoreActionType.RESTORE_TRAINE_LOADING\n        });\n\n        try {\n\n            axios.post(\n                     '/',\n\n                     {\n                        query: `mutation SoftRecover($input: softRecover) {\n                            softRecover(input: $input) {\n                                    id\n                                    email\n                                 \n                                }\n                                }`,\n                        variables: {\n                            \"input\": {\n                            id:traineId\n                            }\n                        }\n                    },\n                    {\n                        headers: {\n                        'Content-Type': 'application/json'\n                        }\n                    }\n                                )\n            .then((res)=> {\n                console.log(res)\n                if (res.data.data) dispatch({type: RestoreActionType.RESTORE_TRAINE_SUCCESS,message:res.data.data.softRecover.email});\n                toast.success(\"Trainee Restored successfuly.\");\n                if (res.data.errors) {\n                        var mess\n                res.data.errors.map((b:any)=>{ mess =b.message})\n                toast.error(mess);\n                console.log(mess)\n                dispatch({type: RestoreActionType.RESTORE_TRAINE_FAIL,error:mess});\n\n                }\n                \n            })\n            .catch(err=>{\n                console.log(err)\n                dispatch({\n                        type: RestoreActionType.RESTORE_TRAINE_FAIL,\n                        error: err.message\n               });\n            })\n\n\n        } catch(err:any) {\n            dispatch({\n                type: RestoreActionType.RESTORE_TRAINE_FAIL,\n                error: err.message\n            });\n        }\n    }\n}\n\n","import creator from \"./creator\";\nimport {EMPTYING_TRASH } from \"..\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nexport const clearTrash =\n  () =>\n  async (dispatch: any) => {\n    try {\n      await axios({\n        url: 'http://localhost:4000/',\n        method: \"post\",\n        data: {\n          query:\n\n      `mutation EmptyRecyclebin {\n        emptyRecyclebin {\n          ... on NotFoundError {\n            message\n          }\n        }\n      }\n      `\n      // ,\n      //     variables: {\n      //       input: {\n      //         page,\n      //         itemsPerPage,\n      //       },\n      //     },\n        },\n      })\n      \n      \n        .then((response) => {\n          if (response.data.data !== null) {\n            toast.success(\"Trash cleared successfully.\");\n            dispatch(\n              creator(\n                EMPTYING_TRASH,\n                response.data.data.emptyRecyclebin\n              )\n            );\n          } else {\n            toast.error(\"Error while clearing trash\");\n            // dispatch(creator(GET_SOFT_DELETED_TRAINEES_ERROR, err));\n          }\n        })\n        .catch((error) => {\n          // dispatch(creator(GET_SOFT_DELETED_TRAINEES_ERROR, error));\n          console.log(\"Dispatch catch error\", error);\n        });\n\n      // const softDeletedTrainees = await datas.data.data.allSoftDeletedTrainees;\n      // dispatch(creator(GET_SOFT_DELETED_TRAINEES_ERROR, softDeletedTrainees));\n    } catch (error) {\n      if (error) {\n        return console.log(error);\n      }\n    }\n  };"],"names":["connect","state","allTrainees","softDeletedTrainees","restore","clearTrashMessage","clearTrash","getAllSoftDeletedTrainees","page","itemsPerPage","dispatch","axios","url","method","data","query","variables","input","then","response","toast","console","log","allSoftDeletedTrainees","creator","GET_SOFT_DELETED_TRAINEES","err","errors","message","GET_SOFT_DELETED_TRAINEES_ERROR","catch","error","restoretraine","traineId","type","RestoreActionType","id","headers","res","mess","softRecover","email","map","b","EMPTYING_TRASH","emptyRecyclebin","props","useState","pageIdx","anchorEl","setAnchorEl","settraineid","setFilterAttributes","wordsEntered","setWordsEntered","open","Boolean","undefined","activeCycle","setActiveCycle","useEffect","moredrop","trainees","COLS","Header","accessor","Cell","row","onClick","event","currentTarget","style","color","fontSize","columns","useMemo","useTable","usePagination","useRowSelect","hooks","visibleColumns","push","getToggleAllRowsSelectedProps","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","prepareRow","pageIndex","rows","selectedFlatRows","emptyRecycleBin","pageSize","className","options","value","label","defaultValue","onChange","e","theme","customTheme","viewBox","target","placeholder","name","headerGroup","index","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","key","original","cells","cell","getCellProps","Menu","onClose","MenuListProps","MenuItem","traine","_id","onSubmitHandler","disabled","pageOption","i","pageNumber","innerText","length"],"sourceRoot":""}